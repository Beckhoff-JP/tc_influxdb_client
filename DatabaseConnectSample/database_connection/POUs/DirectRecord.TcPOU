<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="DirectRecord" Id="{ea7f6e75-724d-4eff-912f-ba9837d9c2a6}" SpecialFunc="None">
    <Declaration><![CDATA[(*
Direct insert mode which the data inserted individually by requests.
*)

FUNCTION_BLOCK DirectRecord IMPLEMENTS IRecordDataQueue
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	current_index	: UDINT; // current index value
	sMeasurementName			: Tc2_System.T_MaxString;	// Measurement name of InfluxDB
	sSchemaName					: Tc2_System.T_MaxString;	// Schema name as a inserted data variable type name as structure
	accumulated_amount		: UDINT := 0;		// buffer usage
	nCycleTime		: UDINT;					// PLC task cycle time setting(in 100ns)
	_queue			: REFERENCE TO dequeue;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="cycle_time" Id="{930cff3d-43cb-4f85-a596-041189c29ae8}">
      <Declaration><![CDATA[// Explicity specify cycle time.
PROPERTY PUBLIC cycle_time : UDINT]]></Declaration>
      <Get Name="Get" Id="{2347cdbf-49ad-467e-8423-bcbfaf43c7ee}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[cycle_time := nCycleTime;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{5d8e7225-8662-4165-b0f4-9579dbabd6ff}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[nCycleTime := cycle_time;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="data_def_structure_name" Id="{7d44e6d3-dd1e-44ff-92c9-398d8f26bc37}">
      <Declaration><![CDATA[PROPERTY PUBLIC data_def_structure_name : Tc2_System.T_MaxString]]></Declaration>
      <Get Name="Get" Id="{0e9922b5-feb7-4eac-9f18-8e523edac107}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[data_def_structure_name := sSchemaName;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{46ab61e4-803e-44c4-863a-a727a88b460c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[sSchemaName := data_def_structure_name;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="db_table_name" Id="{ea83b851-e54c-4e7a-911c-a7aa6b36a8fb}">
      <Declaration><![CDATA[PROPERTY PUBLIC db_table_name : Tc2_System.T_MaxString]]></Declaration>
      <Get Name="Get" Id="{9b88c631-a1d4-49af-95da-8deb537c2442}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[db_table_name := sMeasurementName;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{6053453f-52d2-4ef6-b4d5-639a11a41705}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[sMeasurementName := db_table_name;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="FB_init" Id="{61c85898-1dce-41a4-9b26-1a0329d97146}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	recorder	:IRecordDB;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_queue REF= recorder.queue;]]></ST>
      </Implementation>
    </Method>
    <Method Name="write" Id="{45ce91f0-746d-4be9-a4ac-d0c33f3391f3}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD write : BOOL
VAR_INPUT
	input_data	: Tc2_Utilities.T_Arg;
END_VAR

VAR
	work_data_body  :DbInsertCommand;
	buffer_body: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// put_data
IF NOT _queue.full THEN
	
	// set value of insert command
	work_data_body.data_body := input_data;
	work_data_body.start_time := F_GetSystemTime();
	work_data_body.cycle_time_100ns := nCycleTime;
	work_data_body.chunk_size := 1;
	work_data_body.MeasurementName := sMeasurementName;
	work_data_body.SchemaName := sSchemaName;
	work_data_body.accumulated_amount REF= accumulated_amount;
	// queue in
	IF accumulated_amount = 0 THEN
		_queue.put(work_data_body);
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="DirectRecord">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="DirectRecord.cycle_time.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="DirectRecord.cycle_time.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="DirectRecord.data_def_structure_name.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="DirectRecord.data_def_structure_name.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="DirectRecord.db_table_name.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="DirectRecord.db_table_name.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="DirectRecord.FB_init">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="DirectRecord.write">
      <LineId Id="57" Count="1" />
      <LineId Id="63" Count="7" />
      <LineId Id="94" Count="0" />
      <LineId Id="72" Count="1" />
      <LineId Id="79" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>